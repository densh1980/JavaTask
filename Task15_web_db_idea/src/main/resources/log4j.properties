
# 1st setup

#define the console appender
log4j.appender.consoleAppender = org.apache.log4j.ConsoleAppender

# now define the layout for the appender
log4j.appender.consoleAppender.layout = org.apache.log4j.PatternLayout
log4j.appender.consoleAppender.layout.ConversionPattern=%-4r [%t] %-5p %c %x - %m%n

# now map our console appender as a root logger, means all log messages will go to this appender
log4j.rootLogger = DEBUG, consoleAppender


# second setup

# ”ровень логировани€
#log4j.rootLogger=INFO, file
# јпендер дл€ работы с файлами
#log4j.appender.file=org.apache.log4j.RollingFileAppender
# ѕуть где будет создаватьс€ лог файл
#log4j.appender.file.File=C:\\TMP\\log_file.log
# ”казываем максимальный размер файла с логами
#log4j.appender.file.MaxFileSize=1MB
#  онфигурируем шаблон вывода логов в файл
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n


#«начени€:
#%d{yyyy-MM-dd HH:mm:ss} Ч выводит дату в формате 2014-01-14 23:55:57
#
#%-5p Ч выводит уровень лога (ERROR, DEBUG, INFO Е), цифра 5 означает что всегда использовать 5 символов  остальное дополнитс€ пробелами, а минус (-), то что позиционирование по левой стороне.
#
#%c{1} Ч категори€, в скобках указываетс€ сколько уровней выдавать. “ак как у нас 1 уровень то писатьс€ будет только им€ класса.
#
#%L Ч номер строки в которой произошЄл вызов записи в лог.
#
#%m Ч сообщение, которое передали в лог.
#
#%n Ч переход на новую строку.